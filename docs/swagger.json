{
  "openapi": "3.0.0",
  "info": {
    "title": "Yemeksepeti HW3",
    "version": "1.0.0",
    "description": "This is a REST(ful) API that developed by using AdonisJS framework for Patika.dev/Kodluyoruz Android Developer Bootcamp third homework (Teamwork)."
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Log In",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "serverigaram@gmail.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "example": "remidosol4434",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logging in is successful."
          }
        }
      }
    },
    "/logout": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "auth"
        ],
        "description": "Log Out",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logging out is successful"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "Register",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "avatarUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "serverigaram@gmail.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "remidosol4434",
                    "required": true
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "binary"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John",
                    "required": true
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe",
                    "required": true
                  },
                  "mobileNumber": {
                    "type": "string",
                    "pattern": "^(\\+\\d{1,3}[- ]?)?\\d{10}$",
                    "example": "+905301176240",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "You successfully registered."
          }
        }
      }
    },
    "/foods/delete/{food_id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "foods"
        ],
        "description": "Delete a food",
        "parameters": [
          {
            "name": "food_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "food_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Food has been deleted."
          }
        }
      }
    },
    "/foods/{food_id}": {
      "get": {
        "tags": [
          "foods"
        ],
        "description": "Find a food",
        "parameters": [
          {
            "name": "food_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "food_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Food has been found."
          }
        }
      }
    },
    "/foods": {
      "get": {
        "tags": [
          "foods"
        ],
        "description": "Get all foods",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The number of page (every page fetch 10 items)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of foods"
          }
        }
      }
    },
    "/foods/store": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "foods"
        ],
        "description": "Store a food",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "imageUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Burger",
                    "required": true
                  },
                  "price": {
                    "type": "number",
                    "example": 25.5,
                    "required": true
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "binary",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Food has been stored."
          }
        }
      }
    },
    "/foods/update/{food_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "foods"
        ],
        "description": "Update a food",
        "parameters": [
          {
            "name": "food_id",
            "in": "path",
            "required": true,
            "schema": null,
            "type": "number",
            "properties": {
              "food_id": {
                "type": "number",
                "example": 5,
                "required": true
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "imageUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Burger",
                    "required": false
                  },
                  "price": {
                    "type": "number",
                    "example": 25.5,
                    "required": false
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "binary",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Food has been updated."
          }
        }
      }
    },
    "/orders/delete/{order_id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "orders"
        ],
        "description": "Delete a order",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "order_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Order has been deleted."
          }
        }
      }
    },
    "/orders/{order_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Find a order",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "order_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Order has been found."
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Get all orders",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The number of page (every page fetch 10 items)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of orders"
          }
        }
      }
    },
    "/orders/store": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "orders"
        ],
        "description": "Store a order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "restaurantId": {
                    "type": "number",
                    "example": 5,
                    "required": true
                  },
                  "userId": {
                    "type": "number",
                    "example": 3,
                    "required": true
                  },
                  "orderNote": {
                    "type": "string",
                    "example": "Please bring the order hot",
                    "required": true
                  },
                  "orderPaymentMethod": {
                    "type": "string",
                    "enum": [
                      "CREDIT_CARD",
                      "CASH",
                      "COUPON"
                    ],
                    "example": "CREDIT_CARD",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Order has been stored."
          }
        }
      }
    },
    "/orders/update/{order_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "orders"
        ],
        "description": "Update a order",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "order_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "restaurantId": {
                    "type": "number",
                    "example": 5,
                    "required": false
                  },
                  "userId": {
                    "type": "number",
                    "example": 3,
                    "required": false
                  },
                  "orderNote": {
                    "type": "string",
                    "example": "Please bring the order hot",
                    "required": false
                  },
                  "orderPaymentMethod": {
                    "type": "string",
                    "enum": [
                      "CREDIT_CARD",
                      "CASH",
                      "COUPON"
                    ],
                    "example": "CREDIT_CARD",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Order has been updated."
          }
        }
      }
    },
    "/restaurants/address/{restaurant_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "restaurants"
        ],
        "description": "Add address to restaurant",
        "parameters": [
          {
            "name": "restaurant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "restaurant_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "example": "Turkey",
                    "required": true
                  },
                  "city": {
                    "type": "string",
                    "example": "Samsun",
                    "required": true
                  },
                  "district": {
                    "type": "string",
                    "example": "Ilkadım",
                    "required": true
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "19 Mayis",
                    "required": true
                  },
                  "street": {
                    "type": "string",
                    "example": "Meşrutyet Sokak",
                    "required": true
                  },
                  "latitude": {
                    "type": "number",
                    "example": 41.2879181,
                    "required": false
                  },
                  "longitude": {
                    "type": "number",
                    "example": 36.3361984,
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Address has been added to restaurant."
          }
        }
      }
    },
    "/restaurants/food/": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "restaurants"
        ],
        "description": "Add food to restaurant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "restaurantId": {
                    "type": "number",
                    "example": 2,
                    "required": true
                  },
                  "foodId": {
                    "type": "number",
                    "example": 5,
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Address has been added to restaurant."
          }
        }
      }
    },
    "/restaurants/delete/{restaurant_id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "restaurants"
        ],
        "description": "Delete a restaurant",
        "parameters": [
          {
            "name": "restaurant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "restaurant_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Restaurant has been deleted."
          }
        }
      }
    },
    "/restaurants/{restaurant_id}": {
      "get": {
        "tags": [
          "restaurants"
        ],
        "description": "Find a restaurant",
        "parameters": [
          {
            "name": "restaurant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "restaurant_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Restaurant has been found."
          }
        }
      }
    },
    "/restaurants": {
      "get": {
        "tags": [
          "restaurants"
        ],
        "description": "Get all restaurants",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The number of page (every page fetch 10 items)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of restaurants"
          }
        }
      }
    },
    "/restaurants/store": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "restaurants"
        ],
        "description": "Store a restaurant",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "logoUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Burger King",
                    "required": true
                  },
                  "typeOfRestaurant": {
                    "type": "string",
                    "example": "Burger & Steak",
                    "required": true
                  },
                  "logoUrl": {
                    "type": "string",
                    "format": "binary",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Restaurant has been stored."
          }
        }
      }
    },
    "/restaurants/update/{restaurant_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "restaurants"
        ],
        "description": "Store a restaurant",
        "parameters": [
          {
            "name": "restaurant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "restaurant_id": {
                  "type": "number",
                  "example": 3,
                  "required": true
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "logoUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Burger King",
                    "required": false
                  },
                  "typeOfRestaurant": {
                    "type": "string",
                    "example": "Burger & Steak",
                    "required": false
                  },
                  "logoUrl": {
                    "type": "string",
                    "format": "binary",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Restaurant has been updated."
          }
        }
      }
    },
    "/users/address/{user_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "description": "Add address to user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "user_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string",
                    "example": "Turkey",
                    "required": true
                  },
                  "city": {
                    "type": "string",
                    "example": "Samsun",
                    "required": true
                  },
                  "district": {
                    "type": "string",
                    "example": "Ilkadım",
                    "required": true
                  },
                  "neighborhood": {
                    "type": "string",
                    "example": "19 Mayis",
                    "required": true
                  },
                  "street": {
                    "type": "string",
                    "example": "Meşrutyet Sokak",
                    "required": true
                  },
                  "latitude": {
                    "type": "number",
                    "example": 41.2879181,
                    "required": false
                  },
                  "longitude": {
                    "type": "number",
                    "example": 36.3361984,
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Address has been added to user."
          }
        }
      }
    },
    "/users/delete/{user_id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "description": "Delete a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "user_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User has been deleted."
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Find a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "user_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User has been found."
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get all users",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The number of page (every page fetch 10 items)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of users"
          }
        }
      }
    },
    "/users/store": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "description": "Store a user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "avatarUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "serverigaram@gmail.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "any",
                    "required": true
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "binary"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John",
                    "required": true
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe",
                    "required": true
                  },
                  "mobileNumber": {
                    "type": "string",
                    "pattern": "^(\\+\\d{1,3}[- ]?)?\\d{10}$",
                    "example": "+905301176240",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User has been stored."
          }
        }
      }
    },
    "/users/update/{user_id}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "description": "Update a user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "properties": {
                "user_id": {
                  "type": "number",
                  "example": 5,
                  "required": true
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "avatarUrl": {
                  "contentType": "image/png, image/jpeg"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "serverigaram@gmail.com",
                    "required": false
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "any",
                    "required": false
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "binary",
                    "required": false
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John",
                    "required": false
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe",
                    "required": false
                  },
                  "mobileNumber": {
                    "type": "string",
                    "pattern": "^(\\+\\d{1,3}[- ]?)?\\d{10}$",
                    "example": "+905301176240",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User has been updated."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Food": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name",
          "price"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "restaurantId": {
            "type": "number"
          },
          "orderNote": {
            "type": "string"
          },
          "orderPaymentMethod": {
            "type": "string",
            "enum": [
              "CREDIT_CARD",
              "CASH",
              "COUPON"
            ]
          }
        },
        "required": [
          "userId",
          "restaurantId",
          "orderPaymentMethod"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "typeOfRestaurant": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Standard Authorization header using the Bearer scheme. Example: \"Bearer {token}\""
      }
    }
  },
  "tags": []
}